// Automatically generated by MockGen. DO NOT EDIT!
// Source: logbook.go

package logbook

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Logbook interface
type MockLogbook struct {
	ctrl     *gomock.Controller
	recorder *_MockLogbookRecorder
}

// Recorder for MockLogbook (not exported)
type _MockLogbookRecorder struct {
	mock *MockLogbook
}

func NewMockLogbook(ctrl *gomock.Controller) *MockLogbook {
	mock := &MockLogbook{ctrl: ctrl}
	mock.recorder = &_MockLogbookRecorder{mock}
	return mock
}

func (_m *MockLogbook) EXPECT() *_MockLogbookRecorder {
	return _m.recorder
}

func (_m *MockLogbook) Append(_param0 string, _param1 []byte) error {
	ret := _m.ctrl.Call(_m, "Append", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockLogbookRecorder) Append(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Append", arg0, arg1)
}

func (_m *MockLogbook) GetFromIndex(_param0 Index) (<-chan string, error) {
	ret := _m.ctrl.Call(_m, "GetFromIndex", _param0)
	ret0, _ := ret[0].(<-chan string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockLogbookRecorder) GetFromIndex(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetFromIndex", arg0)
}

func (_m *MockLogbook) GetAll() (<-chan string, error) {
	ret := _m.ctrl.Call(_m, "GetAll")
	ret0, _ := ret[0].(<-chan string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockLogbookRecorder) GetAll() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAll")
}

func (_m *MockLogbook) GetIndex() Index {
	ret := _m.ctrl.Call(_m, "GetIndex")
	ret0, _ := ret[0].(Index)
	return ret0
}

func (_mr *_MockLogbookRecorder) GetIndex() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetIndex")
}
